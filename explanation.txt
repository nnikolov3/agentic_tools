1. Improved Data Cleaning:
    *   **What:** A new `clean_text` function has been implemented and applied to all extracted content (PDFs, JSON, Markdown).
    *   **Why:** To correct Optical Character Recognition (OCR) errors, such as ligatures (e.g., `con\ufb01gured` is now handled) and remove non-printable characters, ensuring cleaner text data.

2.  **Enhanced Chunking Strategy:**
    *   **What:** The `RecursiveCharacterTextSplitter` from `langchain_text_splitters` is now used more consistently for semantic chunking across all document types. For Markdown, it's applied after `MarkdownHeaderTextSplitter` to leverage header structures.
    *   **Why:** To create more contextually relevant text chunks by splitting documents based on semantic structure rather than just fixed character counts, improving retrieval coherence.

3.  **Richer Metadata:**
    *   **What:** For Markdown files, section header information is now extracted and stored as metadata alongside the text chunks in Qdrant. For other file types (PDF, JSON), basic metadata like source file path and chunk ID is included.
    *   **Why:** To provide the RAG system with more context during retrieval, allowing it to return more precise and relevant information by understanding the source section of a retrieved chunk.

4.  **LLM Summarization:**
    *   **What:** LLM summaries are generated for PDF and JSON documents. These summaries are cleaned, prepended to the main content, and then processed along with the rest of the text.
    *   **Why:** To provide a concise overview of the document's content, which can be beneficial for retrieval and understanding, especially for longer documents.